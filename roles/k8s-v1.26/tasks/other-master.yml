- name: View k8s dns from /etc/hosts
  shell:  "grep {{ k8s_control_plane_endpoint }} /etc/hosts >/dev/null"
  register: k8s_dns
  ignore_errors: true

- name: Append k8s dns to /etc/hosts
  lineinfile:
    dest: /etc/hosts
    line: "{{ groups.masters[0] }} {{ k8s_control_plane_endpoint }}"
  when:
   - k8s_dns.rc != 0

- name: Print information
  debug:
    msg: "[忽略] k8s本地解析已添加, 无需重复操作!"
  when:
    - k8s_dns.rc == 0

- name: 等待 kube-apiserver启动
  shell: curl -s -k https://{{ k8s_control_plane_endpoint }}:6443 | grep code | awk '{print $2}'
  register: apiserver_status
  until: apiserver_status.stdout == "403"
  delay: 30
  retries: 20
  failed_when: false

- name: "apiserver_status check"
  debug:
    msg: "apiserver_status is not completed"
  when: apiserver_status.stdout != "403"

- name: Create join token
  command:
    kubeadm token create --print-join-command
  delegate_to: "{{ groups.masters[0] }}"
  run_once: yes
  register:
    k8s_join_command_output

- set_fact:
    k8s_join_command: "{{ k8s_join_command_output.stdout }} --control-plane"

- debug:
    msg: "{{ k8s_join_command }}"

- name: unarchive kubernetes.tar.gz
  unarchive:
    src: "./files/kubernetes/kubernetes.tar.gz"
    dest: "/root"

- name: "make dir"
  file:
    dest: "/etc/kubernetes/pki/etcd/"
    state: directory

- name: copy ca
  shell:
    "cp /root/etc/kubernetes/pki/sa.* /etc/kubernetes/pki/ &&
     cp /root/etc/kubernetes/pki/front-proxy-c* /etc/kubernetes/pki/ &&
     cp /root/etc/kubernetes/pki/ca.* /etc/kubernetes/pki/ &&
     cp /root/etc/kubernetes/pki/etcd/ca.* /etc/kubernetes/pki/etcd"

- name: 加入集群
  command:
    "{{ k8s_join_command }}"

- name: 配置kubectl
  file:
    dest: /root/.kube/
    state: directory

- name: 复制配置
  command:
    cp /etc/kubernetes/admin.conf /root/.kube/config

#- name: 设置开放端口
#  command:
#    "sed -i '/- kube-apiserver/a\\    - --service-node-port-range=80-65535' /etc/kubernetes/manifests/kube-apiserver.yaml"

- name: 等待 api-server 启动
  wait_for:
    timeout: 30

- name: Append k8s dns to /etc/hosts
  lineinfile:
    dest: /etc/hosts
    regexp: "{{ groups.masters[0] }} {{ k8s_control_plane_endpoint }}"
    line: "127.0.0.1 {{ k8s_control_plane_endpoint }}"